{
	// Place your tmp workspace snippets here. Each snippet is defined
	// under a snippet name and has a scope, prefix, body and description.
	// Add comma separated ids of the languages where the snippet is
	// applicable in the scope field. If scope is left empty or omitted,
	// the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and
	// inserted. Possible variables are: $1, $2 for tab stops, $0 for the
	// final cursor position, and ${1:label}, ${2:another} for
	// placeholders.  Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"GCC diagnostic ignored pop": {
		"scope": "c,cpp",
		"prefix": [ 
			"gcc-diagnostic-pop", 
			"pragma-gcc-diagnostic-pop"
		],
		"body": [ "#pragma GCC diagnostic pop" ],
		"description": ""
	},
	"GCC diagnostic ignored push": {
		"scope": "c,cpp",
		"prefix": [
			"gcc-diagnostic-push",
			"pragma-gcc-diagnostic-push"
		],
		"body": [ "#pragma GCC diagnostic push" ],
		"description": ""
	},
	"GCC diagnostic ignored -Wreturn-type": {
		"scope": "c,cpp",
		"prefix": [
			"gcc-diagnostic-return-type",
			"pragma-gcc-diagnostic-return-type"
		],
		"body": [ "#pragma GCC diagnostic ignored \"-Wreturn-type\"" ],
		"description": ""
	},
	"GCC diagnostic ignored -Wunused-but-set-variable": {
		"scope": "c,cpp",
		"prefix": [
			"gcc-diagnostic-unused-but-set-variable",
			"pragma-gcc-diagnostic-unused-but-set-variable"
		],
		"body": [ "#pragma GCC diagnostic ignored \"-Wunused-but-set-variable\"" ],
		"description": ""
	},
	"GCC diagnostic ignored -Wunused-parameter": {
		"scope": "c,cpp",
		"prefix": [
			"gcc-diagnostic-unused-parameter",
			"pragma-gcc-diagnostic-unused-parameter"
		],
		"body": [ "#pragma GCC diagnostic ignored \"-Wunused-parameter\"" ],
		"description": ""
	},
	"GCC diagnostic ignored -Wunused-variable": {
		"scope": "c,cpp",
		"prefix": [
			"gcc-diagnostic-unused-variable",
			"pragma-gcc-diagnostic-unused-variable"
		],
		"body": [ "#pragma GCC diagnostic ignored \"-Wunused-variable\"" ],
		"description": ""
	}
}
