#!/bin/bash
# git-update
# Copyright 2024,2025 James D. Fischer
#
# NAME
#   git-update - performs `git pull' on branches main and develop
#
# SYNOPSYS
#   git-update [dir]
#
# DESCRIPTION
#   git-update performs a `git pull' operation on branches `develop' and
#   `main', in that order.  If a directory name `dir' is specified on the
#   command line, the `git pull' tasks are performed within that directory.
#   Otherwise, the `git pull' tasks are performed within the current
#   directory.
#
# INSTALLATION
#   I recommend you use the following procedure to "install" this script:
#       1) $ test -d ~/.local/bin/ || mkdir -p ~/.local/bin/
#       2) $ ln -s ~/git/ece3220/bin/git-update ~/.local/bin/
#       3) $ git config --global alias.update '!'"$HOME/.local/bin/git-update"
#  	4) Log out and log back in for these changes to take effect.
#
# NOTES
#   Within the local Git repository, if the main or develop branch has
#   unstaged changes, git-update will fail to update that branch.  You'll
#   need to either commit or stash the branch's unstaged changes prior to
#   invoking git-update.
#
# EXAMPLE
#   $ git update ~/git/ece3220
#   OR,
#   $ cd ~/git/ece3220
#   $ git update
#
set -eu

#source /usr/local/libexec/eceugl-utils/trace

SCRIPT_REALPATH=$(/usr/bin/realpath "$0")
SCRIPT_NAME=$(/usr/bin/basename "$SCRIPT_REALPATH")
SCRIPTDIR=$(dirname "$SCRIPT_REALPATH")

source "${SCRIPTDIR}/git-update-function.sh"


###########################################################################
##  main()
###########################################################################

# The default git repository directory is the current working directory. 
git_repo_directory="$(/usr/bin/pwd)"

if [[ $# -gt 0 ]]; then
    if [[ -d $1 ]]; then
        git_repo_directory="$1"
    else
        >&2 echo "[$SCRIPT_NAME] :: ERROR ::  Directory '$1' does not exist."
        exit 1
    fi
fi

git_update "$git_repo_directory"

